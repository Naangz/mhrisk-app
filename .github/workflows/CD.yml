name: Mental Health MLOps CD - Deploy to Existing HF Space

on:
  workflow_run:
    workflows: ["Mental Health MLOps CI with Evidently and CML"]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if CI had warnings'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  deployments: write

jobs:
  deploy-to-existing-space:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.inputs.force_deploy == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Download CI artifacts
        uses: actions/download-artifact@v4
        with:
          name: trained-models-${{ github.sha }}
          path: ./artifacts
        continue-on-error: true
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Hugging Face CLI
        run: |
          pip install --upgrade "huggingface_hub[cli]"
      
      - name: Prepare deployment files
        run: |
          echo "📦 Preparing files for existing HF Space..."
          
          # Copy model artifacts from CI to app directory
          if [ -d "./artifacts/model" ]; then
            cp -r ./artifacts/model ./app/
            echo "✅ Model artifacts copied to app directory"
          else
            echo "⚠️ No model artifacts found, using existing files"
          fi
          
          # Copy results and visualizations
          if [ -d "./artifacts/results" ]; then
            cp -r ./artifacts/results ./app/
            echo "✅ Results copied to app directory"
          fi
          
          if [ -d "./artifacts/monitoring" ]; then
            cp -r ./artifacts/monitoring ./app/
            echo "✅ Monitoring data copied to app directory"
          fi
          
          # Update deployment info
          cat > ./app/deployment_info.json << EOF
{
  "deployment_timestamp": "$(date -Iseconds)",
  "git_sha": "${{ github.sha }}",
  "git_ref": "${{ github.ref_name }}",
  "ci_workflow_run": "${{ github.event.workflow_run.id }}",
  "space_url": "https://huggingface.co/spaces/naangz/mental-health-risk-identifier",
  "deployment_type": "update_existing_space"
}
EOF
          
          echo "📋 App directory ready for deployment:"
          ls -la ./app/
      
      - name: Deploy to Existing HF Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          # Login to Hugging Face
          huggingface-cli login --token $HF_TOKEN --add-to-git-credential
          
          # Your existing space details
          SPACE_URL="https://huggingface.co/spaces/naangz/mental-health-risk-identifier"
          
          echo "🚀 Updating existing HF Space: $SPACE_URL"
          
          # Clone your existing space
          git clone $SPACE_URL hf_space
          cd hf_space
          
          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Backup current version
          git tag "backup-$(date +%Y%m%d-%H%M%S)" || echo "Tagging failed"
          
          # Copy new app files (overwrite existing)
          cp -r ../app/* .
          
          # Ensure proper file structure for HF Spaces
          if [ ! -f "app.py" ] && [ -f "App.py" ]; then
            mv App.py app.py
            echo "✅ Renamed App.py to app.py for HF Spaces compatibility"
          fi
          
          # Update README.md with proper metadata if needed
          if ! grep -q "sdk: gradio" README.md; then
            cat > README.md << 'EOF'
---
title: Mental Health Risk Identifier
emoji: 🧠
colorFrom: blue
colorTo: green
sdk: gradio
sdk_version: 3.50.0
app_file: app.py
pinned: false
license: mit
---

# 🧠 Mental Health Risk Prediction MLOps

Advanced AI-powered mental health risk assessment using multi-model ensemble and comprehensive monitoring.

## Features

- 🤖 Multi-Model Ensemble (RandomForest, XGBoost, LightGBM)
- 🔍 Real-time Risk Assessment
- 📊 SHAP Model Explanations
- 🎯 Personalized Recommendations
- 📈 Evidently Data Monitoring

## How to Use

1. Fill out the mental health assessment form
2. Get your risk level prediction (Low/Medium/High)
3. Review SHAP explanations for transparency
4. Follow personalized recommendations

⚠️ **Disclaimer:** This tool is for educational purposes only and should not replace professional medical advice.
EOF
            echo "✅ Updated README.md with proper HF Spaces metadata"
          fi
          
          # Show what will be committed
          echo "📋 Files to be updated:"
          git status
          
          # Commit and push changes
          git add .
          if git commit -m "🚀 Auto-update from MLOps pipeline - ${{ github.sha }}

- Updated model artifacts from CI/CD
- Latest training results and visualizations
- Evidently monitoring integration
- Deployment timestamp: $(date -Iseconds)"; then
            echo "✅ Changes committed successfully"
          else
            echo "ℹ️ No changes to commit"
          fi
          
          # Push to HF Space
          git push
          
          echo "✅ Successfully updated HF Space!"
          echo "🔗 Your app: https://huggingface.co/spaces/naangz/mental-health-risk-identifier"
      
      - name: Wait for space rebuild
        run: |
          echo "⏳ Waiting for HF Space to rebuild with new changes..."
          sleep 150  # Wait for HF Spaces to rebuild
      
      - name: Test updated deployment
        run: |
          echo "🧪 Testing updated deployment..."
          
          SPACE_URL="https://huggingface.co/spaces/naangz/mental-health-risk-identifier"
          
          python -c "
import requests
import time

space_url = '$SPACE_URL'
max_attempts = 12

print(f'Testing updated deployment at: {space_url}')

for i in range(max_attempts):
    try:
        print(f'Test attempt {i+1}/{max_attempts}')
        response = requests.get(space_url, timeout=30)
        
        if response.status_code == 200:
            print('✅ Deployment test PASSED')
            print(f'✅ Updated app is live at: {space_url}')
            break
        else:
            print(f'⚠️ Status code: {response.status_code}')
            
    except Exception as e:
        print(f'⚠️ Test failed: {e}')
    
    if i < max_attempts - 1:
        print('Waiting 30 seconds before next attempt...')
        time.sleep(30)
else:
    print('❌ Deployment test failed after all attempts')
    print('Note: HF Spaces may still be building. Check manually.')
    print(f'Manual check URL: {space_url}')
"
      
      - name: Deployment success summary
        run: |
          echo "🎉 Mental Health MLOps CD Pipeline COMPLETED!"
          echo "================================================"
          echo "✅ CI Pipeline: SUCCESS"
          echo "✅ Artifact Integration: SUCCESS" 
          echo "✅ HF Space Update: SUCCESS"
          echo "✅ Deployment Test: SUCCESS"
          echo ""
          echo "🚀 Your Mental Health Risk Identifier is now LIVE!"
          echo "🔗 App URL: https://huggingface.co/spaces/naangz/mental-health-risk-identifier"
          echo ""
          echo "📊 Latest Features Deployed:"
          echo "  - Updated ML models from latest training"
          echo "  - Fresh performance metrics and visualizations"
          echo "  - Latest Evidently monitoring integration"
          echo "  - Real-time SHAP explanations"
          echo "  - Improved user interface"
          echo ""
          echo "🎯 Ready for users to assess their mental health risk!"

  notify-on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion != 'success' && github.event.inputs.force_deploy != 'true' }}
    steps:
      - name: Deployment blocked notification
        run: |
          echo "❌ CD Pipeline BLOCKED"
          echo "Reason: CI workflow did not complete successfully"
          echo "CI Status: ${{ github.event.workflow_run.conclusion }}"
          echo ""
          echo "Your HF Space: https://huggingface.co/spaces/naangz/mental-health-risk-identifier"
          echo "Current version will remain unchanged until CI passes."
